/** @type {import('next').NextConfig} */
const nextConfig = {
  // Add webpack configuration to ignore problematic paths
  webpack: (config, { webpack }) => {
    // Completely ignore the problematic directories during build
    config.watchOptions = {
      ...config.watchOptions,
      ignored: [
        '**/node_modules/**',
        '**/Application Data/**',
        '**/AppData/**',
        '**/Local Settings/**',
        '**/My Documents/**',
        'C:/Users/poona/Application Data/**',
        'C:\\Users\\poona\\Application Data/**'
      ]
    };
    
    // Add additional configuration to prevent file system access to problematic paths
    if (config.plugins) {
      config.plugins.push(
        new webpack.IgnorePlugin({
          resourceRegExp: /^\.\/locale$/,
          contextRegExp: /moment$/,
        })
      );
    }
    
    return config;
  },
  // Explicitly exclude problematic paths from file tracing
  outputFileTracingExcludes: {
    '*': [
      '**/Application Data/**',
      '**/AppData/**',
      '**/Local Settings/**',
      '**/My Documents/**',
      'C:/Users/poona/Application Data/**',
      'C:\\Users\\poona\\Application Data/**'
    ]
  },
  // Disable TypeScript type checking during build for faster builds
  typescript: {
    ignoreBuildErrors: true,
  },
  // Disable ESLint during build for faster builds
  eslint: {
    ignoreDuringBuilds: true,
  },
  // Add standalone output for production deployment
  output: 'standalone'
};

export default nextConfig;



